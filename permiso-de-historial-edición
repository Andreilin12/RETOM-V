<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Configuración de Permisos</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #34495e;
      color: #fff;
    }
    header {
      background-color: #2c3e50;
      color: #fff;
      padding: 20px;
      text-align: center;
      font-size: 1.5em;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }
    main {
      padding: 20px;
      max-width: 1200px;
      margin: auto;
    }
    .user-card {
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      padding: 20px;
      margin-bottom: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      color: #2c3e50;
    }
    .user-card img {
      border-radius: 50%;
      width: 50px;
      height: 50px;
      margin-right: 20px;
    }
    .user-card button {
      background-color: #27ae60;
      color: white;
      border: none;
      padding: 10px 15px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    .user-card button:hover {
      background-color: #219653;
    }
    .alert {
      position: fixed;
      top: 20px;
      right: 20px;
      background: #e74c3c;
      color: #fff;
      padding: 15px;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      display: none;
    }
    .alert.show {
      display: block;
    }
  </style>
</head>
<body>
  <header>
    <h1>Configuración de Permisos</h1>
  </header>
  <main>
    <div id="alert" class="alert"></div>
    
    <h2>Lista de Usuarios</h2>
    <div id="userListContainer"></div>
  </main>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-app.js";
    import { getFirestore, collection, onSnapshot, doc, updateDoc, arrayUnion, arrayRemove, addDoc } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-firestore.js";
    import { getAuth } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-auth.js";

    const firebaseConfig = {
      apiKey: "AIzaSyDLi-egzQlgbKW8XV_qIhU6313Gd8gocCg",
      authDomain: "inventario-35d6b.firebaseapp.com",
      projectId: "inventario-35d6b",
      storageBucket: "inventario-35d6b.appspot.com",
      messagingSenderId: "266100399659",
      appId: "1:266100399659:web:92358d28cbd803c8a7d46e"
    };

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    const auth = getAuth(app);

    function showAlert(alertContent) {
      const alert = document.getElementById("alert");
      alert.innerHTML = alertContent;
      alert.classList.add("show");
      setTimeout(() => {
        alert.classList.remove("show");
      }, 7000);
    }

    function loadUsers() {
      const userListContainer = document.getElementById("userListContainer");

      onSnapshot(collection(db, "users"), (snapshot) => {
        userListContainer.innerHTML = "";  

        snapshot.forEach((doc) => {
          const data = doc.data();
          const userCard = document.createElement('div');
          userCard.classList.add('user-card');

          // Verificar si el usuario ya tiene permiso
          const hasPermission = data.grantedUsers && data.grantedUsers.includes(auth.currentUser.uid);
          const buttonText = hasPermission ? "Quitar Permiso" : "Dar Permiso";

          userCard.innerHTML = `
            <img src="${data.photoURL || 'default-avatar.png'}" alt="${data.name}">
            <span>${data.name}</span>
            <button onclick="togglePermission('${doc.id}', this, '${data.name}')">${buttonText}</button>
          `;

          userListContainer.appendChild(userCard);
        });
      });
    }

    // Función para otorgar o revocar permisos
    window.togglePermission = async (userId, button, userName) => {
      const currentUser = auth.currentUser;

      if (!currentUser) {
        showAlert("Error: Usuario no autenticado.");
        return;
      }

      const userRef = doc(db, "users", userId);
      const hasPermission = button.innerText === "Quitar Permiso";

      try {
        if (hasPermission) {
          // Quitar permiso
          await updateDoc(userRef, {
            grantedUsers: arrayRemove(currentUser.uid)
          });
          await addDoc(collection(db, "permissions"), {
            userId: userId,
            action: 'revoked',
            grantedBy: currentUser.uid,
            timestamp: new Date()
          });
          button.innerText = "Dar Permiso"; // Cambiar a "Dar Permiso"
          showAlert(`Permiso revocado para ${userName} con éxito.`);
        } else {
          // Dar permiso
          await updateDoc(userRef, {
            grantedUsers: arrayUnion(currentUser.uid)
          });
          await addDoc(collection(db, "permissions"), {
            userId: userId,
            action: 'granted',
            grantedBy: currentUser.uid,
            timestamp: new Date()
          });
          button.innerText = "Quitar Permiso"; // Cambiar a "Quitar Permiso"
          showAlert(`Permiso otorgado a ${userName} con éxito.`);
          // Aquí puedes cargar los datos del colaborador después de dar permiso
          loadUserData(userId);
        }
      } catch (error) {
        showAlert("Error al actualizar permiso: " + error);
      }
    };

    function loadUserData(userId) {
      const userRef = doc(db, "users", userId);
      onSnapshot(userRef, (doc) => {
        const data = doc.data();
        if (data) {
          showAlert(`Datos del colaborador: ${data.name} - ID: ${data.id}`);
        } else {
          showAlert("No se encontraron datos para el colaborador.");
        }
      });
    }

    loadUsers();  
  </script>   
</body>
</html>
